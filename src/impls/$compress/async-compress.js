/**
 * @generated-from ./$compress.js
 * This file is autogenerated from a template. Please do not edit it directly.
 * To rebuild it from its template use the command
 * > npm run generate
 * More information can be found in CONTRIBUTING.md
 */

import { asyncEnsureIterable } from '../../internal/async-iterable.js';
import { curry } from '../../internal/curry.js';
import { __asyncZip } from '../$zip/async-zip.js';
import { __asyncFilter } from '../$filter/async-filter.js';
import { __asyncMap } from '../$map/async-map.js';

export function __asyncCompress(source, included) {
  return __asyncMap(
    __asyncFilter(__asyncZip([source, included]), ([, isIncluded]) => isIncluded),
    ([value]) => value,
  );
}

export const asyncCompress = /*#__PURE__*/ curry(function $compress(source, included) {
  return __asyncCompress(asyncEnsureIterable(source), asyncEnsureIterable(included));
});
